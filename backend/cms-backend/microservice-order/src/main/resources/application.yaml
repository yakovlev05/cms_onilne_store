spring:
  application:
    name: microservice-order
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/order_service}
    username: ${POSTGRES_USER:user}
    password: ${POSTGRES_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    open-in-view: false
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.xml
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: order-service
      properties:
        spring.json.trusted.packages: "ru.yakovlev05.cms.core.event"
    order-validation-input-topic-partitions: 1
    order-validation-input-topic-replicas: 1
    order-validation-input-topic-name: order.validation.input
    order-payment-create-topic-partitions: 1
    order-payment-create-topic-replicas: 1
    order-payment-create-topic-name: order.payment.create
    user-topic-name: user
    order-validation-result-topic-name: order.validation.result

jwt:
  secret: ${JWT_SECRET:only_test_123456789123456789}
  accessTokenValidityInMs: ${ACCESS_TOKEN_VALIDITY_IN_MS:86400000}
  refreshTokenValidityInMs: ${REFRESH_TOKEN_VALIDITY_IN_MS:2592000000}
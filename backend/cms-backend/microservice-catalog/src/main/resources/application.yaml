spring:
  application:
    name: microservice-catalog
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/catalog_service}
    username: ${POSTGRES_USER:user}
    password: ${POSTGRES_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    open-in-view: false
  servlet:
    multipart:
      max-file-size: 10MB
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.xml
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: catalog-service
      properties:
        spring.json.trusted.packages: "ru.yakovlev05.cms.core.event"
    product-topic-name: product
    product-topic-partitions: 1
    product-topic-replicas: 1
    order-validation-result-topic-partitions: 1
    order-validation-result-topic-replicas: 1
    order-validation-result-topic-name: order.validation.result
    order-validation-input-topic-name: order.validation.input

s3:
  accessKey: ${S3_ACCESS_KEY:user}
  secretKey: ${S3_SECRET_KEY:password}
  bucket: ${S3_BUCKET:images}
  url: ${S3_URL:http://localhost:9000}
  custom_url: ${S3_CUSTOM_URL:http://s3.localhost} # Будет использоваться для создания ссылок, потому что без него это будет S3_URL

#logging:
#  level:
#    software.amazon.awssdk: TRACE


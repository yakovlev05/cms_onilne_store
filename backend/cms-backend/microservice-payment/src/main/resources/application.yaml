spring:
  application:
    name: microservice-payment
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/payment_service}
    username: ${POSTGRES_USER:user}
    password: ${POSTGRES_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    open-in-view: false
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.xml
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: payment-service
      properties:
        spring.json.trusted.packages: "ru.yakovlev05.cms.core.event"
    order-payment-result-topic-partitions: 1
    order-payment-result-topic-replicas: 1
    order-payment-result-topic-name: order.payment.result
    order-payment-create-topic-name: order.payment.create

yookassa:
  shop-id: ${YOOKASSA_SHOP_ID}
  api-key: ${YOOKASSA_API_KEY}
  return-url: ${YOOKASSA_RETURN_URL:http://localhost}

cors:
  allowedOrigins: ${CORS_ALLOW_URLS:http://localhost:3000}

server {
    listen 80;
    server_name localhost, admin.localhost/;

    ###
    # мб использовать map для маршрутизации
    ###

    # Импортируем все конфиги
#     include *.conf;

    include conf.d/configs/auth.conf; # странный путь (в начале conf.d)? все вопросы к nginx, он запускается в докере и вот так "хорошо" обрабатывает пути
    include conf.d/configs/catalog.conf;
    include conf.d/configs/user.conf;
    include conf.d/configs/cart.conf;
    include conf.d/configs/order.conf;
    include conf.d/configs/payment.conf;
    include conf.d/configs/swagger.conf;

    location /kafka-ui {
        proxy_pass http://cms-manage-kafka-ui:8080;
        proxy_set_header Host $host;
    }
    
    location / {
        proxy_pass http://cms-frontend-client:3000;
        proxy_set_header Host $host;
    }
}

# Настройка роутинга для S3 хранилища (MinIO) - админ
server {
    listen 80;
    server_name admin.s3.localhost;

    location / {
        proxy_pass http://cms-infra-s3:9001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection Upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Настройка роутинга для S3 хранилища (MinIO) - клиент
server {
    listen 80;
    server_name s3.localhost;

    location / {
        proxy_pass http://cms-infra-s3:9000;
    }
}

server {
    listen 80;
    server_name admin.localhost;
    
    location / {
        proxy_pass http://cms-frontend-admin:80;
        proxy_set_header Host $host;
    }
    
    location /api {
        proxy_pass http://localhost:80; # Роутим на самого себя) (первая директива http)
        # не добавляем / в конце - сохраняем путь
        proxy_set_header Host localhost; # Указываем, что нужно обработать запрос в блоке server_name localhost
    }
}
